{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sinic\\\\Desktop\\\\Quizz\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport Questions from \"./Components/Questions\";\nimport ReactPlayer from \"react-player\";\nlet questions;\nlet learningOptions = [{\n  questionText: 'Select Learning Option',\n  answerOptions: [{\n    answerText: 'Beginner',\n    choice: 1\n  }, {\n    answerText: 'Somewhat Experienced',\n    choice: 2\n  }, {\n    answerText: 'Experienced',\n    choice: 3\n  }]\n}];\nexport default function App() {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [learningChoice, setLearningChoice] = useState(0);\n\n  const handleLearningAnswer = choice => {\n    switch (choice) {\n      case 1:\n        questions = Questions.brandQuestions();\n        setLearningChoice(1);\n        break;\n\n      case 2:\n        questions = Questions.electricCarsHistoryQuestions();\n        setLearningChoice(2);\n        break;\n\n      case 3:\n        questions = Questions.electricCarsModelsQuestions();\n        setLearningChoice(3);\n        break;\n    }\n  };\n\n  const handleAnswerOptionClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  if (learningChoice === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-count\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, \"Alege ce doresti sa inveti\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"answer-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }\n    }, learningOptions[currentQuestion].answerOptions.map(answerOption => /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => handleLearningAnswer(answerOption.choice),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, answerOption.answerText))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 3\n      }\n    }, showScore ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"score-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }\n    }, \"Ai raspuns corect la \", score, \" din \", questions.length - 1, \" intrebari\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-count\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, currentQuestion !== 0 && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, \"Intrebarea \", currentQuestion), \"/\", questions.length - 1), currentQuestion === 0 && learningChoice === 1 && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ReactPlayer, {\n      width: 420,\n      height: 348,\n      url: \"https://www.youtube.com/watch?v=pQiT2U5E9tI\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 10\n      }\n    })), currentQuestion === 0 && learningChoice === 2 && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ReactPlayer, {\n      width: 420,\n      height: 348,\n      url: \"https://www.youtube.com/watch?v=FdL2YI9k0PI\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 10\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    }, questions[currentQuestion].questionText)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"answer-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 6\n      }\n    }, questions[currentQuestion].answerOptions.map(answerOption => /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => handleAnswerOptionClick(answerOption.isCorrect),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 8\n      }\n    }, answerOption.answerText)))));\n  }\n}","map":{"version":3,"sources":["C:/Users/sinic/Desktop/Quizz/src/App.js"],"names":["React","useState","Questions","ReactPlayer","questions","learningOptions","questionText","answerOptions","answerText","choice","App","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","learningChoice","setLearningChoice","handleLearningAnswer","brandQuestions","electricCarsHistoryQuestions","electricCarsModelsQuestions","handleAnswerOptionClick","isCorrect","nextQuestion","length","map","answerOption"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Questions from \"./Components/Questions\"\nimport ReactPlayer from \"react-player\";\n\nlet questions\n\nlet learningOptions =\n\t[\n\t\t{\n\t\t\tquestionText: 'Select Learning Option',\n\t\t\tanswerOptions: \n\t\t\t[\n\t\t\t\t{ answerText: 'Beginner', choice: 1 },\n\t\t\t\t{ answerText: 'Somewhat Experienced', choice: 2 },\n\t\t\t\t{ answerText: 'Experienced', choice: 3 },\n\n\t\t\t],\n\t\t}\n\t];\n\nexport default function App() {\n\n\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\n\tconst [showScore, setShowScore] = useState(false);\n\tconst [score, setScore] = useState(0);\n\tconst [learningChoice,setLearningChoice] = useState(0);\n\n\tconst handleLearningAnswer = (choice) =>\n\t{\n        switch (choice) \n\t\t{\n        \tcase 1:\n        \t\tquestions = Questions.brandQuestions()\n\t\t\t\t\t\tsetLearningChoice(1)\n\t\t\t\t\t\tbreak\n\t\t\t\t case 2:\n\t\t\t\t    questions = Questions.electricCarsHistoryQuestions()\n\t\t\t\t\t\tsetLearningChoice(2)\n\t\t\t\t\t\tbreak\n\t\t\t\tcase 3:\n\t\t\t\t    questions = Questions.electricCarsModelsQuestions()\n\t\t\t\t\t\tsetLearningChoice(3)\n\t\t\t\t    break\n        }\n\t}\n\n\tconst handleAnswerOptionClick = (isCorrect) => \n\t\t{\n\t\t\tif (isCorrect) \n\t\t\t{\n\t\t\t\tsetScore(score + 1);\n\t\t\t}\n\n\t\t\tconst nextQuestion = currentQuestion + 1;\n\n\t\t\tif (nextQuestion < questions.length)\n\t\t\t{\n\t\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t\t} else \n\t\t\t{\n\t\t\t\tsetShowScore(true);\n\t\t\t}\n\t\t};\n\tif(learningChoice === 0){\n\t\treturn(\n\t\t\t<div className='app'>\n\t\t\t\t<div className='question-section'>\n\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t<span>Alege ce doresti sa inveti</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t\t<div className='answer-section'>\n\t\t\t\t\t{learningOptions[currentQuestion].answerOptions.map((answerOption) => (\n\t\t\t\t\t\t<button onClick={() => handleLearningAnswer(answerOption.choice)}>{answerOption.answerText}</button>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\telse{return (\n\t\t<div className='app'>\n\t\t\t{showScore ? (\n\t\t\t\t<div className='score-section'>\n\t\t\t\t\tAi raspuns corect la {score} din {questions.length -1} intrebari\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t{currentQuestion!==0 && \t<div>\n\t\t\t\t\t\t\t\t<span>Intrebarea {currentQuestion}</span>/{questions.length -1}\n\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t{currentQuestion === 0 && learningChoice ===1 &&\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t  <ReactPlayer \n\t\t\t\t\t\t\t  \twidth={420} \n\t\t\t\t\t\t\t\theight={348}\n\t\t\t\t\t\t\t\turl=\"https://www.youtube.com/watch?v=pQiT2U5E9tI\"\n\t\t\t\t\t\t\t  />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{currentQuestion === 0 && learningChoice ===2 &&\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<ReactPlayer\n\t\t\t\t\t\t\t\t\twidth={420} \n\t\t\t\t\t\t\t\t\theight={348}\n\t\t\t\t\t\t\t\t\t\turl=\"https://www.youtube.com/watch?v=FdL2YI9k0PI\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='answer-section'>\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\n}\n"]},"metadata":{},"sourceType":"module"}